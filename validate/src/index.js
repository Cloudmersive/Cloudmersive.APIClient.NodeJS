/**
 * validateapi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AddressGetServersResponse', 'model/AddressVerifySyntaxOnlyResponse', 'model/CheckResponse', 'model/FullEmailValidationResponse', 'model/GeolocateResponse', 'model/WhoisResponse', 'api/DomainApi', 'api/EmailApi', 'api/IPaddressControllerApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AddressGetServersResponse'), require('./model/AddressVerifySyntaxOnlyResponse'), require('./model/CheckResponse'), require('./model/FullEmailValidationResponse'), require('./model/GeolocateResponse'), require('./model/WhoisResponse'), require('./api/DomainApi'), require('./api/EmailApi'), require('./api/IPaddressControllerApi'));
  }
}(function(ApiClient, AddressGetServersResponse, AddressVerifySyntaxOnlyResponse, CheckResponse, FullEmailValidationResponse, GeolocateResponse, WhoisResponse, DomainApi, EmailApi, IPaddressControllerApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Validateapi = require('index'); // See note below*.
   * var xxxSvc = new Validateapi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Validateapi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Validateapi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Validateapi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AddressGetServersResponse model constructor.
     * @property {module:model/AddressGetServersResponse}
     */
    AddressGetServersResponse: AddressGetServersResponse,
    /**
     * The AddressVerifySyntaxOnlyResponse model constructor.
     * @property {module:model/AddressVerifySyntaxOnlyResponse}
     */
    AddressVerifySyntaxOnlyResponse: AddressVerifySyntaxOnlyResponse,
    /**
     * The CheckResponse model constructor.
     * @property {module:model/CheckResponse}
     */
    CheckResponse: CheckResponse,
    /**
     * The FullEmailValidationResponse model constructor.
     * @property {module:model/FullEmailValidationResponse}
     */
    FullEmailValidationResponse: FullEmailValidationResponse,
    /**
     * The GeolocateResponse model constructor.
     * @property {module:model/GeolocateResponse}
     */
    GeolocateResponse: GeolocateResponse,
    /**
     * The WhoisResponse model constructor.
     * @property {module:model/WhoisResponse}
     */
    WhoisResponse: WhoisResponse,
    /**
     * The DomainApi service constructor.
     * @property {module:api/DomainApi}
     */
    DomainApi: DomainApi,
    /**
     * The EmailApi service constructor.
     * @property {module:api/EmailApi}
     */
    EmailApi: EmailApi,
    /**
     * The IPaddressControllerApi service constructor.
     * @property {module:api/IPaddressControllerApi}
     */
    IPaddressControllerApi: IPaddressControllerApi
  };

  return exports;
}));
